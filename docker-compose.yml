version: '3.7'

services:
  backend:
    image: escalaralcoiaicomtat:latest
    container_name: escalaralcoiaicomtat_backend
    restart: "no"
    environment:
      # -- Configure database
      DATABASE_DRIVER: "org.postgresql.Driver"
      DATABASE_URL: "jdbc:postgresql://db:5432/postgres"
      DATABASE_USERNAME: "postgres"
      DATABASE_PASSWORD: "AbfEwudQ8AqhhVVqTiRURpbMmQTW46"
      # -- Configure Secure Endpoints
      AUTH_TOKEN: "cwBsTxhjf8mFQrN8zPUpGstmtCeg3z"
      # -- Enable Importer
      ENABLE_IMPORTER: "true"
      # -- Configure Crowdin
      # Required: CROWDIN_TOKEN, CROWDIN_PROJECT_ID
      # Optional: CROWDIN_ORGANIZATION
      # -- Configure Sentry
      # Optional: SENTRY_DSN
      # IS_PRODUCTION: false by default
    env_file:
      - "secrets.env"
    volumes:
      - ./keystore:/var/lib/escalaralcoiaicomtat/keystore
      - ./certificates:/var/lib/escalaralcoiaicomtat/certs
      - ./files:/var/lib/escalaralcoiaicomtat/files
      - ./google-services.json:/var/lib/escalaralcoiaicomtat/google-services.json
    networks:
      - escalaralcoiaicomtat_backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # See https://hub.docker.com/_/postgres for more information
  db:
    image: postgres
    container_name: escalaralcoiaicomtat_backend_db
    environment:
      POSTGRES_PASSWORD: AbfEwudQ8AqhhVVqTiRURpbMmQTW46 # This should be modified
      PGUSER: postgres
    networks:
      - escalaralcoiaicomtat_backend
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s

networks:
  escalaralcoiaicomtat_backend:
    name: escalaralcoiaicomtat_backend

volumes:
  pgdata:
