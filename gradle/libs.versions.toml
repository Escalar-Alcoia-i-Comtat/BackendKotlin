[versions]
crowdin = "1.24.0"
exposed = "0.60.0"
firebase-admin = "9.4.3"
h2 = "2.3.232"
imageio-webp = "0.1.6"
kotlin = "2.1.10"
kotlinx-kover = "0.9.1"
kotlin-serialization = "1.8.0"
ktor = "3.1.1"
postgresql = "42.7.5"
progressbar = "0.10.1"
sqlite = "3.49.1.0"

[libraries]
crowdin = { module = "com.github.crowdin:crowdin-api-client-java", version.ref = "crowdin" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebase-admin" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
imageio-webp = { module = "org.sejda.imageio:webp-imageio", version.ref = "imageio-webp" }
kotlin-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-serializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-cachingHeaders = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-conditionalHeaders = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-test-server = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-javaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
progressbar = { module = "me.tongfei:progressbar", version.ref = "progressbar" }
sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
