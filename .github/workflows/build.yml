name: Build and Publish

on:
  push:
    branches:
      - master
    paths:
      - "src/**"
      - "gradle/**"
      - "*.kts"
  release:
    types:
      - released

permissions:
  checks: write
  pull-requests: write

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Update version.txt
        if: ${{ github.event_name == 'release' }}
        run: echo ${{ github.event.release.tag_name }} > ./package/version.txt
      - name: Commit version.txt
        if: ${{ github.event_name == 'release' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update version.txt"
          commit_options: "--no-verify"
          branch: master
          file_pattern: './package/version.txt'

      # If the event is a release, build and push the release image, tagging it as latest and the release tag
      - name: Build and push release
        uses: docker/build-push-action@v6
        if: ${{ github.event_name == 'release' }}
        with:
          push: true
          tags: arnyminerz/escalaralcoiaicomtat:latest,arnyminerz/escalaralcoiaicomtat:${{ github.event.release.tag_name }}
      # Otherwise, build and push the development image, tagging it as development
      - name: Build and push development
        uses: docker/build-push-action@v6
        if: ${{ github.event_name != 'release' }}
        with:
          push: true
          tags: arnyminerz/escalaralcoiaicomtat:development
